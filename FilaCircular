public class FilaCircular<T> {
    private int top = -1; 
    private int base = 0; 
    private T[] data; 
    private int quantidade = 0; // contador de elementos na fila


    public FilaCircular(int size) {
        this.data = (T[]) new Object[size];
    }

    public void add(T s) {
        if (isFull()) {
            throw new RuntimeException("Fila cheia");
        }
        top = (top + 1) % data.length; // garante que, se top atingir o final do array, ele volte ao início
        data[top] = s; // S é armazenado na posição top do array data
        quantidade++;

    //Ou método MOVE com IF ternário
        //public int move (int pos){
            //return pos + 1 == data.length ? 0 : pos + 1;
        //}
            //return (pos + 1) % data.length;
    }

    public T remove() {
        if (isEmpty()) {
            throw new RuntimeException("Fila vazia");
        }
        T item = data[base];
        base = (base + 1) % data.length;
        quantidade--;
        return item;
    }

    public void clear() {
        top = -1;
        base = 0;
        quantidade = 0;
        data = (T[]) new Object[data.length];
    }

    public boolean isFull() {
        return quantidade == data.length;
    }

    public boolean isEmpty() {
        return quantidade == 0;
    }
}
